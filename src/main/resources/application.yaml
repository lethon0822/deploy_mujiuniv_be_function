constants:
  file:
    directory: /home/download   # ??? ??

spring:
  application:
    name: rainbow-academic-management

  datasource:
    # log4jdbc ?? ???? DriverSpy + jdbc:log4jdbc: ?? ??
    url: jdbc:log4jdbc:mariadb://192.168.0.39/final_project_not_user?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
    username: green3
    password: figma502
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy

    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000       # 5?
      max-lifetime: 1800000      # 30?
      connection-timeout: 30000  # 30?

    jpa:
      database: mysql
      defer-datasource-initialization: true # 중요. JPA 테이블 생성 이후 data.sql
      hibernate:
        #  ddl-auto: update #데이블은 없는데 entity가 존재하면 create 한다.
        ddl-auto: create #프로젝트 실행시마다 테이블을 모두 drop 후 create 한다.
      properties:
        hibernate:
          jdbc:
            batch_size: 20
          format_sql: true # 쿼리문 로그를 찍어줄 때 보기 편하게 포맷팅
          order_updates: true
          show_sql: true

  jackson:
    time-zone: Asia/Seoul
    date-format: yyyy-MM-dd HH:mm:ss

mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
    default-statement-timeout: 10
  # resources ?? ?? classpath ???? ???? ?? ??
  mapper-locations: classpath:/mappers/**/*.xml

mail:
  smtp:
    host: "smtp.gmail.com"
    username: "mujiuniv@gmail.com"
    password: "dqknokdqkusfndls"
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 3000
          timeout: 3000
          writetimeout: 3000

server:
  port: 8080
  servlet:
    session:
      cookie:
        same-site: lax   # Lax / Strict / None
        path: /          # ??? /
        # domain: localhost  # ??? ?? ??? ?? ??? ? ??

logging:
  level:
    root: INFO
    # ??? ??(? ???? ?????? ??)
    com.rainbowuniv: DEBUG
    org.mybatis: DEBUG
    # log4jdbc ????
    jdbc.sqlonly: DEBUG     # ??? SQL
    jdbc.sqltiming: INFO    # ???? ??
    jdbc.audit: OFF
    jdbc.resultset: OFF
    jdbc.connection: OFF

